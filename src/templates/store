import { compose, createStore, applyMiddleware } from 'redux';
import createSagaMiddleware from 'redux-saga';
import { routerMiddleware } from 'react-router-redux';
import createHistory from 'history/createBrowserHistory'; // eslint-disable-line
import rootReducer from './rootReducer';
import rootSaga from './rootSaga';

export const storeElements = {
  history: undefined,
  store: undefined,
};

export default function configureStore() {
  storeElements.history = createHistory();

  const initialState = {};
  const enhancers = [];
  const sagaMiddleware = createSagaMiddleware();
  const middleware = [
    sagaMiddleware,
    routerMiddleware(history),
  ];

  if (process.env.NODE_ENV === 'development') {
    const { devToolsExtension } = window;
    if (typeof devToolsExtension === 'function') {
      enhancers.push(devToolsExtension());
    }
  }

  const composedEnhancers = compose(
    applyMiddleware(...middleware),
    ...enhancers,
  );

  storeElements.store = createStore(
    rootReducer(),
    initialState,
    composedEnhancers,
  );

  sagaMiddleware.run(rootSaga);
}

export function getStore() {
  if(!storeElements.store) {
    configureStore();
  }
  return storeElements.store;
}

export function getHistory() {
  if(!storeElements.history) {
    configureStore();
  }
  return storeElements.history;
}
